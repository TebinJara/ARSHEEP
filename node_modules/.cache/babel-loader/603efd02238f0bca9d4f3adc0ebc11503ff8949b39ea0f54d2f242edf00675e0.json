{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Documentos\\\\GitHub\\\\ARSHEEP\\\\src\\\\components\\\\pages\\\\PageCliente.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"../pages/PageCliente.css\";\nimport { obtenerClientes } from '../../services/supa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageCliente = () => {\n  _s();\n  // Utiliza el hook useState para mantener una lista de datos de clientes.\n  const [data, setData] = useState([]);\n\n  // Utiliza otro useState para mantener la información del cliente seleccionado.\n  const [clienteSeleccionado, setClienteSeleccionado] = useState(null);\n\n  // useEffect se utiliza para cargar datos al montar el componente.\n  useEffect(() => {\n    // Función asíncrona para obtener los datos de los clientes.\n    const fetchData = async () => {\n      const clientes = await obtenerClientes(); // Llama a una función que obtiene los clientes.\n      if (clientes) {\n        setData(clientes); // Actualiza el estado con los clientes obtenidos.\n      }\n    };\n    fetchData(); // Ejecuta la función fetchData al montar el componente.\n  }, []); // El arreglo vacío asegura que el efecto solo se ejecuta una vez al montar.\n\n  // Función para manejar la selección de un cliente.\n  const seleccionarCliente = cliente => {\n    setClienteSeleccionado(cliente); // Establece el cliente seleccionado en el estado.\n  };\n\n  // El componente devuelve un bloque JSX que define la UI del componente.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clientes-container-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"RUT de Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(cliente => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => seleccionarCliente(cliente),\n          className: \"table-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: cliente.run_cliente\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cliente.dv_run\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cliente.nombre_cliente\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, cliente.run_cliente, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), clienteSeleccionado && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-cliente\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-cliente-1\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Informaci\\xF3n del Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-cliente-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-cliente-2-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"RUT:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 32\n            }, this), \" \", clienteSeleccionado.run_cliente]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nombre:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 32\n            }, this), \" \", clienteSeleccionado.nombre_cliente]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Direcci\\xF3n:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 32\n            }, this), \" \", clienteSeleccionado.direccion_cliente]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tel\\xE9fono:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 32\n            }, this), \" \", clienteSeleccionado.contacto]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-cliente-2-2\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: clienteSeleccionado.url_imagen,\n            alt: `Imagen de ${clienteSeleccionado.nombre_cliente}`,\n            className: \"imagen-cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(PageCliente, \"Fj7OaklutMtgki2jh4pjdqYVFAA=\");\n_c = PageCliente;\nvar _c;\n$RefreshReg$(_c, \"PageCliente\");","map":{"version":3,"names":["React","useEffect","useState","obtenerClientes","jsxDEV","_jsxDEV","PageCliente","_s","data","setData","clienteSeleccionado","setClienteSeleccionado","fetchData","clientes","seleccionarCliente","cliente","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","run_cliente","dv_run","nombre_cliente","direccion_cliente","contacto","src","url_imagen","alt","_c","$RefreshReg$"],"sources":["C:/Users/felip/OneDrive/Documentos/GitHub/ARSHEEP/src/components/pages/PageCliente.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport \"../pages/PageCliente.css\";\r\nimport { obtenerClientes } from '../../services/supa';\r\n\r\nexport const PageCliente = () => {\r\n    // Utiliza el hook useState para mantener una lista de datos de clientes.\r\n    const [data, setData] = useState([]);\r\n\r\n    // Utiliza otro useState para mantener la información del cliente seleccionado.\r\n    const [clienteSeleccionado, setClienteSeleccionado] = useState(null);\r\n\r\n    // useEffect se utiliza para cargar datos al montar el componente.\r\n    useEffect(() => {\r\n        // Función asíncrona para obtener los datos de los clientes.\r\n        const fetchData = async () => {\r\n            const clientes = await obtenerClientes(); // Llama a una función que obtiene los clientes.\r\n            if (clientes) {\r\n                setData(clientes); // Actualiza el estado con los clientes obtenidos.\r\n            }\r\n        };\r\n        fetchData(); // Ejecuta la función fetchData al montar el componente.\r\n    }, []); // El arreglo vacío asegura que el efecto solo se ejecuta una vez al montar.\r\n\r\n    // Función para manejar la selección de un cliente.\r\n    const seleccionarCliente = cliente => {\r\n        setClienteSeleccionado(cliente); // Establece el cliente seleccionado en el estado.\r\n    };\r\n\r\n    // El componente devuelve un bloque JSX que define la UI del componente.\r\n    return (\r\n        <div className='clientes-container-1'>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>RUT de Cliente</th>\r\n                        <th>DV</th>\r\n                        <th>Nombre</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/* Mapea cada cliente a una fila de tabla */}\r\n                    {data.map((cliente) => (\r\n                        <tr key={cliente.run_cliente} onClick={() => seleccionarCliente(cliente)} className=\"table-row\">\r\n                            <td>{cliente.run_cliente}</td>\r\n                            <td>{cliente.dv_run}</td>\r\n                            <td>{cliente.nombre_cliente}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            {/* Muestra información detallada del cliente seleccionado si hay alguno */}\r\n            {clienteSeleccionado && (\r\n                <div className='info-cliente'>\r\n\r\n                    <div className='info-cliente-1'>\r\n                        <h2>Información del Cliente</h2>\r\n                    </div>\r\n                    <div className='info-cliente-2'>\r\n                        <div className='info-cliente-2-1'>\r\n                            <p><strong>RUT:</strong> {clienteSeleccionado.run_cliente}</p>\r\n                            <p><strong>Nombre:</strong> {clienteSeleccionado.nombre_cliente}</p>\r\n                            <p><strong>Dirección:</strong> {clienteSeleccionado.direccion_cliente}</p>\r\n                            <p><strong>Teléfono:</strong> {clienteSeleccionado.contacto}</p>\r\n                        </div>\r\n                        <div className='info-cliente-2-2'>\r\n                            <img src={clienteSeleccionado.url_imagen} alt={`Imagen de ${clienteSeleccionado.nombre_cliente}`} className=\"imagen-cliente\" />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}