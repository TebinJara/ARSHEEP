{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api/establecimientos',\n  // Base URL del backend para ESTABLECIMIENTO\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Obtener todos los establecimientos\nexport const getEstablecimientos = async () => {\n  try {\n    const response = await api.get('/establecimientos');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener los establecimientos:', error.message);\n    return [];\n  }\n};\n\n// Obtener un establecimiento por ID\nexport const getEstablecimientoById = async id => {\n  try {\n    const response = await api.get(`/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener el establecimiento por ID:', error.message);\n    return null;\n  }\n};\n\n// Crear un nuevo establecimiento\nexport const createEstablecimiento = async establecimientoData => {\n  try {\n    const response = await api.post('/', establecimientoData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear el establecimiento:', error.message);\n    return null;\n  }\n};\n\n// Actualizar un establecimiento por ID\nexport const updateEstablecimiento = async (id, establecimientoData) => {\n  try {\n    const response = await api.put(`/${id}`, establecimientoData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar el establecimiento:', error.message);\n    return null;\n  }\n};\n\n// Eliminar un establecimiento por ID\nexport const deleteEstablecimiento = async id => {\n  try {\n    const response = await api.delete(`/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar el establecimiento:', error.message);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","getEstablecimientos","response","get","data","error","console","message","getEstablecimientoById","id","createEstablecimiento","establecimientoData","post","updateEstablecimiento","put","deleteEstablecimiento","delete"],"sources":["C:/Users/pfeve/OneDrive/Escritorio/Arsheep/ARSHEEP/src/services/establecimientoService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3001/api/establecimientos', // Base URL del backend para ESTABLECIMIENTO\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Obtener todos los establecimientos\r\nexport const getEstablecimientos = async () => {\r\n    try {\r\n        const response = await api.get('/establecimientos');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al obtener los establecimientos:', error.message);\r\n        return [];\r\n    }\r\n};\r\n\r\n// Obtener un establecimiento por ID\r\nexport const getEstablecimientoById = async (id) => {\r\n    try {\r\n        const response = await api.get(`/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al obtener el establecimiento por ID:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Crear un nuevo establecimiento\r\nexport const createEstablecimiento = async (establecimientoData) => {\r\n    try {\r\n        const response = await api.post('/', establecimientoData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al crear el establecimiento:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Actualizar un establecimiento por ID\r\nexport const updateEstablecimiento = async (id, establecimientoData) => {\r\n    try {\r\n        const response = await api.put(`/${id}`, establecimientoData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al actualizar el establecimiento:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Eliminar un establecimiento por ID\r\nexport const deleteEstablecimiento = async (id) => {\r\n    try {\r\n        const response = await api.delete(`/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al eliminar el establecimiento:', error.message);\r\n        return null;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,4CAA4C;EAAE;EACvDC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,mBAAmB,CAAC;IACnD,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACtE,OAAO,EAAE;EACb;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,sBAAsB,GAAG,MAAOC,EAAE,IAAK;EAChD,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,IAAIM,EAAE,EAAE,CAAC;IACxC,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC3E,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,qBAAqB,GAAG,MAAOC,mBAAmB,IAAK;EAChE,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACe,IAAI,CAAC,GAAG,EAAED,mBAAmB,CAAC;IACzD,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAClE,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMM,qBAAqB,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,mBAAmB,KAAK;EACpE,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACiB,GAAG,CAAC,IAAIL,EAAE,EAAE,EAAEE,mBAAmB,CAAC;IAC7D,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACvE,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMQ,qBAAqB,GAAG,MAAON,EAAE,IAAK;EAC/C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACmB,MAAM,CAAC,IAAIP,EAAE,EAAE,CAAC;IAC3C,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACrE,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}