{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api/empresas',\n  // Base URL del backend para EMPRESA\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Obtener todas las empresas\nexport const getEmpresas = async () => {\n  try {\n    const response = await api.get('/empresas');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener las empresas:', error.message);\n    return [];\n  }\n};\n\n// Obtener una empresa por ID\nexport const getEmpresaById = async id => {\n  try {\n    const response = await api.get(`/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener la empresa por ID:', error.message);\n    return null;\n  }\n};\n\n// Crear una nueva empresa\nexport const createEmpresa = async empresaData => {\n  try {\n    const response = await api.post('/', empresaData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear la empresa:', error.message);\n    return null;\n  }\n};\n\n// Actualizar una empresa por ID\nexport const updateEmpresa = async (id, empresaData) => {\n  try {\n    const response = await api.put(`/${id}`, empresaData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar la empresa:', error.message);\n    return null;\n  }\n};\n\n// Eliminar una empresa por ID\nexport const deleteEmpresa = async id => {\n  try {\n    const response = await api.delete(`/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar la empresa:', error.message);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","getEmpresas","response","get","data","error","console","message","getEmpresaById","id","createEmpresa","empresaData","post","updateEmpresa","put","deleteEmpresa","delete"],"sources":["C:/Users/pfeve/OneDrive/Escritorio/Arsheep/ARSHEEP/src/services/empresaService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3001/api/empresas', // Base URL del backend para EMPRESA\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Obtener todas las empresas\r\nexport const getEmpresas = async () => {\r\n    try {\r\n        const response = await api.get('/empresas');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al obtener las empresas:', error.message);\r\n        return [];\r\n    }\r\n};\r\n\r\n// Obtener una empresa por ID\r\nexport const getEmpresaById = async (id) => {\r\n    try {\r\n        const response = await api.get(`/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al obtener la empresa por ID:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Crear una nueva empresa\r\nexport const createEmpresa = async (empresaData) => {\r\n    try {\r\n        const response = await api.post('/', empresaData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al crear la empresa:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Actualizar una empresa por ID\r\nexport const updateEmpresa = async (id, empresaData) => {\r\n    try {\r\n        const response = await api.put(`/${id}`, empresaData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al actualizar la empresa:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Eliminar una empresa por ID\r\nexport const deleteEmpresa = async (id) => {\r\n    try {\r\n        const response = await api.delete(`/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al eliminar la empresa:', error.message);\r\n        return null;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,oCAAoC;EAAE;EAC/CC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC9D,OAAO,EAAE;EACb;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOC,EAAE,IAAK;EACxC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,IAAIM,EAAE,EAAE,CAAC;IACxC,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACnE,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,aAAa,GAAG,MAAOC,WAAW,IAAK;EAChD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACe,IAAI,CAAC,GAAG,EAAED,WAAW,CAAC;IACjD,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC1D,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,WAAW,KAAK;EACpD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACiB,GAAG,CAAC,IAAIL,EAAE,EAAE,EAAEE,WAAW,CAAC;IACrD,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC/D,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAON,EAAE,IAAK;EACvC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACmB,MAAM,CAAC,IAAIP,EAAE,EAAE,CAAC;IAC3C,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC7D,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}