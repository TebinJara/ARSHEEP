{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Documentos\\\\GitHub\\\\ARSHEEP\\\\src\\\\components\\\\login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { obtenerUsuario, obtenerOrdenesDeTrabajo } from '../../services/supa';\nimport { useUser } from '../usuario/UsuarioContexto';\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const {\n    setUser\n  } = useUser();\n  useEffect(() => {\n    const fetchData = async () => {\n      const usuarios = await obtenerUsuario();\n      console.log(\"Usuarios cargados:\", usuarios); // Verifica si los usuarios se cargan correctamente\n      // Obtenemos la información del usuario y filtramos las órdenes de trabajo\n      const user = usuarios.find(usuario => usuario.nombre_usuario === username && usuario.contrasenha === password);\n      if (user) {\n        console.log(\"Usuario encontrado:\", user); // Verifica si se encuentra el usuario\n        setUser(user); // Establecemos la información del usuario en el contexto\n        const ordenes = await obtenerOrdenesDeTrabajo();\n        console.log(\"Órdenes de trabajo cargadas:\", ordenes); // Verifica si las órdenes se cargan correctamente\n        if (ordenes) {\n          const filteredOrdenes = ordenes.filter(ot => ot.run_cliente === user.rut);\n          console.log(\"Órdenes filtradas:\", filteredOrdenes); // Verifica si se filtran correctamente las órdenes\n          // Actualizamos la lista de órdenes de trabajo con las filtradas\n          setData(filteredOrdenes);\n        }\n      }\n    };\n    fetchData();\n  }, [username, password, setUser]);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Busca en data si existe un usuario con el username y password ingresados\n    const usuario = data.find(usuario => usuario.nombre_usuario === username && usuario.contrasenha === password);\n    console.log(\"Usuario ingresado:\", usuario); // Verifica si el usuario ingresado es correcto\n    if (usuario) {\n      setUser({\n        nombre_usuario: usuario.nombre_usuario,\n        rut: usuario.rut,\n        tipo_usuario: usuario.id_tipo_usuario\n      });\n      navigate('/Layout');\n    } else {\n      alert('Usuario o contraseña incorrectos'); // Opcionalmente manejar este caso de otra manera\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Usuario:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Contrase\\xF1a:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Iniciar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"9b1Z33O5gNPCOeiPl2vUJMSEb0E=\", false, function () {\n  return [useNavigate, useUser];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","obtenerUsuario","obtenerOrdenesDeTrabajo","useUser","jsxDEV","_jsxDEV","Login","_s","data","setData","username","setUsername","password","setPassword","navigate","setUser","fetchData","usuarios","console","log","user","find","usuario","nombre_usuario","contrasenha","ordenes","filteredOrdenes","filter","ot","run_cliente","rut","handleSubmit","e","preventDefault","tipo_usuario","id_tipo_usuario","alert","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/felip/OneDrive/Documentos/GitHub/ARSHEEP/src/components/login/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { obtenerUsuario, obtenerOrdenesDeTrabajo } from '../../services/supa';\r\nimport { useUser } from '../usuario/UsuarioContexto';\r\nimport \"./Login.css\";\r\n\r\nexport const Login = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n    const { setUser } = useUser();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const usuarios = await obtenerUsuario();\r\n            console.log(\"Usuarios cargados:\", usuarios); // Verifica si los usuarios se cargan correctamente\r\n            // Obtenemos la información del usuario y filtramos las órdenes de trabajo\r\n            const user = usuarios.find(usuario => usuario.nombre_usuario === username && usuario.contrasenha === password);\r\n            if (user) {\r\n                console.log(\"Usuario encontrado:\", user); // Verifica si se encuentra el usuario\r\n                setUser(user); // Establecemos la información del usuario en el contexto\r\n                const ordenes = await obtenerOrdenesDeTrabajo();\r\n                console.log(\"Órdenes de trabajo cargadas:\", ordenes); // Verifica si las órdenes se cargan correctamente\r\n                if (ordenes) {\r\n                    const filteredOrdenes = ordenes.filter(ot => ot.run_cliente === user.rut);\r\n                    console.log(\"Órdenes filtradas:\", filteredOrdenes); // Verifica si se filtran correctamente las órdenes\r\n                    // Actualizamos la lista de órdenes de trabajo con las filtradas\r\n                    setData(filteredOrdenes);\r\n                }\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [username, password, setUser]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Busca en data si existe un usuario con el username y password ingresados\r\n        const usuario = data.find(usuario => usuario.nombre_usuario === username && usuario.contrasenha === password);\r\n        console.log(\"Usuario ingresado:\", usuario); // Verifica si el usuario ingresado es correcto\r\n        if (usuario) {\r\n            setUser({ nombre_usuario: usuario.nombre_usuario, rut: usuario.rut, tipo_usuario: usuario.id_tipo_usuario }); \r\n            navigate('/Layout')\r\n        } else {\r\n            alert('Usuario o contraseña incorrectos'); // Opcionalmente manejar este caso de otra manera\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='login-container'>\r\n            <form onSubmit={handleSubmit} className='form-container'>\r\n                <div className='form-group'>\r\n                    <label htmlFor=\"username\">Usuario:</label>\r\n                    <input\r\n                        id=\"username\"\r\n                        type=\"text\"\r\n                        value={username}\r\n                        onChange={e => setUsername(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                    <label htmlFor=\"password\">Contraseña:</label>\r\n                    <input\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <button type=\"submit\">Iniciar sesión</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}