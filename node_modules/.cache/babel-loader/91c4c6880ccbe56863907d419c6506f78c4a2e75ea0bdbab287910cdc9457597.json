{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  // Asegúrate de que esta sea la URL correcta\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const obtenerUsuariosEmpleados = async () => {\n  try {\n    const response = await apiClient.get('/usersEmployees');\n    return response.data; // Devuelve los datos recibidos del servidor\n  } catch (error) {\n    console.error('Error al obtener los usuarios del tipo empelado:', error.message);\n    return []; // Retorna un array vacío en caso de error\n  }\n};\nexport const obtenerUsuarioEmpleadoPorID = async () => {\n  try {\n    const response = await apiClient.get('/usersEmployees/getUsuarioEmpleadoPorId');\n    return response.data; // Devuelve los datos recibidos del servidor\n  } catch (error) {\n    console.error('Error al obtener los usuario por ID:', error.message);\n    return []; // Retorna un array vacío en caso de error\n  }\n};\nexport const cambiarEstadoUsuario = async (id_usuario, nuevo_estado) => {\n  try {\n    const response = await apiClient.put('usersEmployees/cambiarEstadoUsuario', {\n      id_usuario,\n      nuevo_estado\n    });\n    return response.data; // Devuelve los datos recibidos del servidor\n  } catch (error) {\n    console.error('Error al cambiar el estado del usuario:', error.message);\n    return null; // Retorna null en caso de error\n  }\n};\nexport const obtenerImagenUsuarioEmpleado = async id_usuario => {\n  try {\n    const response = await apiClient.put('usersEmployees/getImageUserEmployed', {\n      id_usuario\n    });\n    return response.data; // Devuelve los datos recibidos del servidor\n  } catch (error) {\n    console.error('Error al conseguir url de la imagen:', error.message);\n    return null; // Retorna null en caso de error\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","obtenerUsuariosEmpleados","response","get","data","error","console","message","obtenerUsuarioEmpleadoPorID","cambiarEstadoUsuario","id_usuario","nuevo_estado","put","obtenerImagenUsuarioEmpleado"],"sources":["C:/Users/esteb/OneDrive/Escritorio/pt/ARSHEEP/src/services/GestionUsuariosService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: 'http://localhost:3001/api', // Asegúrate de que esta sea la URL correcta\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport const obtenerUsuariosEmpleados = async () => {\r\n    try {\r\n        const response = await apiClient.get('/usersEmployees');\r\n        return response.data; // Devuelve los datos recibidos del servidor\r\n    } catch (error) {\r\n        console.error('Error al obtener los usuarios del tipo empelado:', error.message);\r\n        return []; // Retorna un array vacío en caso de error\r\n    }\r\n};\r\n\r\nexport const obtenerUsuarioEmpleadoPorID = async () => {\r\n    try {\r\n        const response = await apiClient.get('/usersEmployees/getUsuarioEmpleadoPorId');\r\n        return response.data; // Devuelve los datos recibidos del servidor\r\n    } catch (error) {\r\n        console.error('Error al obtener los usuario por ID:', error.message);\r\n        return []; // Retorna un array vacío en caso de error\r\n    }\r\n};\r\n\r\nexport const cambiarEstadoUsuario = async (id_usuario, nuevo_estado) => {\r\n    try {\r\n        const response = await apiClient.put('usersEmployees/cambiarEstadoUsuario', {\r\n            id_usuario,\r\n            nuevo_estado\r\n        });\r\n        return response.data; // Devuelve los datos recibidos del servidor\r\n    } catch (error) {\r\n        console.error('Error al cambiar el estado del usuario:', error.message);\r\n        return null; // Retorna null en caso de error\r\n    }\r\n};\r\n\r\nexport const obtenerImagenUsuarioEmpleado = async (id_usuario) => {\r\n    try {\r\n        const response = await apiClient.put('usersEmployees/getImageUserEmployed', {\r\n            id_usuario,\r\n        });\r\n        return response.data; // Devuelve los datos recibidos del servidor\r\n    } catch (error) {\r\n        console.error('Error al conseguir url de la imagen:', error.message);\r\n        return null; // Retorna null en caso de error\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC3BC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,wBAAwB,GAAG,MAAAA,CAAA,KAAY;EAChD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,SAAS,CAACM,GAAG,CAAC,iBAAiB,CAAC;IACvD,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAACE,OAAO,CAAC;IAChF,OAAO,EAAE,CAAC,CAAC;EACf;AACJ,CAAC;AAED,OAAO,MAAMC,2BAA2B,GAAG,MAAAA,CAAA,KAAY;EACnD,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAML,SAAS,CAACM,GAAG,CAAC,yCAAyC,CAAC;IAC/E,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACpE,OAAO,EAAE,CAAC,CAAC;EACf;AACJ,CAAC;AAED,OAAO,MAAME,oBAAoB,GAAG,MAAAA,CAAOC,UAAU,EAAEC,YAAY,KAAK;EACpE,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAML,SAAS,CAACe,GAAG,CAAC,qCAAqC,EAAE;MACxEF,UAAU;MACVC;IACJ,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACvE,OAAO,IAAI,CAAC,CAAC;EACjB;AACJ,CAAC;AAED,OAAO,MAAMM,4BAA4B,GAAG,MAAOH,UAAU,IAAK;EAC9D,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAML,SAAS,CAACe,GAAG,CAAC,qCAAqC,EAAE;MACxEF;IACJ,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACpE,OAAO,IAAI,CAAC,CAAC;EACjB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}