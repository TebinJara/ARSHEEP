{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pfeve\\\\OneDrive\\\\Escritorio\\\\Arsheep\\\\ARSHEEP\\\\src\\\\components\\\\OT\\\\UploadImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImage = () => {\n  _s();\n  const [idOts, setIdOts] = useState([]);\n  const [selectedIdOt, setSelectedIdOt] = useState('');\n  const [file, setFile] = useState(null);\n  useEffect(() => {\n    // Fetch the list of id_ot from the backend\n    const fetchIdOts = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/orden_trabajo');\n        setIdOts(response.data);\n\n        // Recuperar el id_ot del almacenamiento local y establecerlo como seleccionado\n        const storedIdOt = localStorage.getItem('id_ot');\n        if (storedIdOt) {\n          setSelectedIdOt(storedIdOt);\n        }\n      } catch (error) {\n        console.error('Error fetching id_ot:', error);\n      }\n    };\n    fetchIdOts();\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedIdOt || !file) {\n      console.error('Missing id_ot or file');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('id_ot', selectedIdOt);\n    formData.append('file', file);\n    console.log('id_ot:', selectedIdOt);\n    console.log('file:', file);\n    try {\n      const response = await axios.post('http://localhost:3001/api/img/subir', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Image uploaded successfully:', response.data);\n\n      // Limpiar el id_ot del almacenamiento local después de subir la imagen\n      localStorage.removeItem('id_ot');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"ID OT:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedIdOt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file\",\n      children: \"Upload Image:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImage, \"yejoV+KPfEXhmHxjkFKwKpCbKnI=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UploadImage","_s","idOts","setIdOts","selectedIdOt","setSelectedIdOt","file","setFile","fetchIdOts","response","get","data","storedIdOt","localStorage","getItem","error","console","handleSubmit","event","preventDefault","formData","FormData","append","log","post","headers","removeItem","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","e","target","files","_c","$RefreshReg$"],"sources":["C:/Users/pfeve/OneDrive/Escritorio/Arsheep/ARSHEEP/src/components/OT/UploadImage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UploadImage = () => {\r\n  const [idOts, setIdOts] = useState([]);\r\n  const [selectedIdOt, setSelectedIdOt] = useState('');\r\n  const [file, setFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch the list of id_ot from the backend\r\n    const fetchIdOts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/api/orden_trabajo');\r\n        setIdOts(response.data);\r\n\r\n        // Recuperar el id_ot del almacenamiento local y establecerlo como seleccionado\r\n        const storedIdOt = localStorage.getItem('id_ot');\r\n        if (storedIdOt) {\r\n          setSelectedIdOt(storedIdOt);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching id_ot:', error);\r\n      }\r\n    };\r\n\r\n    fetchIdOts();\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    if (!selectedIdOt || !file) {\r\n      console.error('Missing id_ot or file');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('id_ot', selectedIdOt);\r\n    formData.append('file', file);\r\n\r\n    console.log('id_ot:', selectedIdOt);\r\n    console.log('file:', file);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/api/img/subir', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      console.log('Image uploaded successfully:', response.data);\r\n\r\n      // Limpiar el id_ot del almacenamiento local después de subir la imagen\r\n      localStorage.removeItem('id_ot');\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n       <label>ID OT:</label>\r\n       <div>{selectedIdOt}</div>\r\n\r\n      <label htmlFor=\"file\">Upload Image:</label>\r\n      <input type=\"file\" id=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n\r\n      <button type=\"submit\">Upload</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadImage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}