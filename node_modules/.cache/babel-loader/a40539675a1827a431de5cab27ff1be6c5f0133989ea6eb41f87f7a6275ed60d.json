{"ast":null,"code":"export const formatRUT = input => {\n  let value = input.replace(/[^0-9kK]/g, '').toUpperCase();\n  if (value.includes('K') && value.indexOf('K') !== value.length - 1) {\n    value = value.replace(/K/g, '');\n  }\n  if (value.length > 9) {\n    value = value.slice(0, 8) + value.slice(8, 9);\n  }\n  if (value.length > 1) {\n    value = value.slice(0, -1) + '-' + value.slice(-1);\n  }\n  if (value.length > 5) {\n    value = value.slice(0, -5) + '.' + value.slice(-5);\n  }\n  if (value.length > 9) {\n    value = value.slice(0, -9) + '.' + value.slice(-9);\n  }\n  if (value.length > 12) {\n    value = value.slice(0, 12);\n  }\n  return value;\n};","map":{"version":3,"names":["formatRUT","input","value","replace","toUpperCase","includes","indexOf","length","slice"],"sources":["C:/Users/esteb/OneDrive/Escritorio/pt/ARSHEEP/src/helpers/format.js"],"sourcesContent":["\r\n\r\nexport const formatRUT = (input) => {\r\n    let value = input.replace(/[^0-9kK]/g, '').toUpperCase();\r\n    if (value.includes('K') && value.indexOf('K') !== value.length - 1) {\r\n        value = value.replace(/K/g, '');\r\n    }\r\n    if (value.length > 9) {\r\n        value = value.slice(0, 8) + value.slice(8, 9);\r\n    }\r\n    if (value.length > 1) {\r\n        value = value.slice(0, -1) + '-' + value.slice(-1);\r\n    }\r\n    if (value.length > 5) {\r\n        value = value.slice(0, -5) + '.' + value.slice(-5);\r\n    }\r\n    if (value.length > 9) {\r\n        value = value.slice(0, -9) + '.' + value.slice(-9);\r\n    }\r\n    if (value.length > 12) {\r\n        value = value.slice(0, 12);\r\n    }\r\n    return value;\r\n};"],"mappings":"AAEA,OAAO,MAAMA,SAAS,GAAIC,KAAK,IAAK;EAChC,IAAIC,KAAK,GAAGD,KAAK,CAACE,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAACC,WAAW,CAAC,CAAC;EACxD,IAAIF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,IAAIH,KAAK,CAACI,OAAO,CAAC,GAAG,CAAC,KAAKJ,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;IAChEL,KAAK,GAAGA,KAAK,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EACnC;EACA,IAAID,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;IAClBL,KAAK,GAAGA,KAAK,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGN,KAAK,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACjD;EACA,IAAIN,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;IAClBL,KAAK,GAAGA,KAAK,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGN,KAAK,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;EACtD;EACA,IAAIN,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;IAClBL,KAAK,GAAGA,KAAK,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGN,KAAK,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;EACtD;EACA,IAAIN,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;IAClBL,KAAK,GAAGA,KAAK,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGN,KAAK,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;EACtD;EACA,IAAIN,KAAK,CAACK,MAAM,GAAG,EAAE,EAAE;IACnBL,KAAK,GAAGA,KAAK,CAACM,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAC9B;EACA,OAAON,KAAK;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}