{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nconst supabase = createClient(import.meta.env.VITE_SUPABASE_URL, import.meta.env.VITE_SUPABASE_KEY);\n\n// Función obtener datos clientes\nexport const obtenerClientes = async () => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('CLIENTE').select('*'); // Seleccionar todos los campos\n\n    if (error) {\n      throw error;\n    }\n    return data;\n  } catch (error) {\n    console.error('Error al obtener los datos de la tabla de clientes:', error.message);\n    return null;\n  }\n};","map":{"version":3,"names":["createClient","supabase","import","meta","env","VITE_SUPABASE_URL","VITE_SUPABASE_KEY","obtenerClientes","data","error","from","select","console","message"],"sources":["C:/Users/pfeve/OneDrive/Escritorio/ARSHEEP-PROMANT/ARSHEEP/src/services/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabase = createClient(\r\n    import.meta.env.VITE_SUPABASE_URL,\r\n    import.meta.env.VITE_SUPABASE_KEY \r\n);\r\n\r\n// Función obtener datos clientes\r\nexport const obtenerClientes = async () => {\r\n    try {        \r\n        const { data, error } = await supabase\r\n            .from('CLIENTE')\r\n            .select('*'); // Seleccionar todos los campos\r\n\r\n        if (error) {\r\n            throw error;\r\n        }\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Error al obtener los datos de la tabla de clientes:', error.message);\r\n        return null;\r\n    }\r\n};\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,QAAQ,GAAGD,YAAY,CACzBE,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,iBAAiB,EACjCH,MAAM,CAACC,IAAI,CAACC,GAAG,CAACE,iBACpB,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACA,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMR,QAAQ,CACjCS,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;;IAElB,IAAIF,KAAK,EAAE;MACP,MAAMA,KAAK;IACf;IAEA,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZG,OAAO,CAACH,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAACI,OAAO,CAAC;IACnF,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}