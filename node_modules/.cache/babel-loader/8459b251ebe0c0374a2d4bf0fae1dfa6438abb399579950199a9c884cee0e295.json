{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  // Asegúrate de que esta sea la URL correcta\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Insertar orden de trabajo\n// export const insertarOrdenTrabajo = async (ordenTrabajo) => {\n//     console.log(\"me fui afuera del try u.u\")\n//     try {\n//         console.log(\"entre al try!! :$\")\n//         const response = await apiClient.post('/orden_trabajo', ordenTrabajo);\n//         return response.data; // Devuelve los datos recibidos del servidor\n//     } catch (error) {\n//         console.error('Error al insertar la orden de trabajo:', error.message);\n//         throw error; // Lanza el error para que el componente que llama pueda manejarlo\n//     }\n// };\n\nexport const insertarOrdenTrabajo = async formData => {\n  try {\n    const response = await apiClient.post('/orden_trabajo', formData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear un OT:', error.message);\n    return {\n      error: error.response.data\n    }; // Devuelve el error de la respuesta\n  }\n};\nexport const obtenerClientes = async () => {\n  try {\n    const response = await apiClient.get('/clientes');\n    return response.data; // Devuelve los datos recibidos del servidor\n  } catch (error) {\n    console.error('Error al obtener los clientes:', error.message);\n    return []; // Retorna un array vacío en caso de error\n  }\n};\nexport const obtenerEmpleados = async () => {\n  try {\n    const response = await apiClient.get('/empleados');\n    return response.data; // Devuelve los datos recibidos del servidor\n  } catch (error) {\n    console.error('Error al obtener los clientes:', error.message);\n    return []; // Retorna un array vacío en caso de error\n  }\n};\n// Subir imagen\n// export const subirImagen = async (file, folder = 'img1') => {\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     try {\n//         const response = await apiClient.post(`/subirImagen/${folder}`, formData, {\n//             headers: {\n//                 'Content-Type': 'multipart/form-data'\n//             }\n//         });\n\n//         return response.data; // Devuelve los datos recibidos del servidor\n//     } catch (error) {\n//         console.error('Error al subir la imagen:', error.message);\n//         throw error; // Lanza el error para que el componente que llama pueda manejarlo\n//     }\n// };","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","insertarOrdenTrabajo","formData","response","post","data","error","console","message","obtenerClientes","get","obtenerEmpleados"],"sources":["C:/Users/esteb/OneDrive/Escritorio/pt/ARSHEEP/src/services/OtService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: 'http://localhost:3001/api', // Asegúrate de que esta sea la URL correcta\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Insertar orden de trabajo\r\n// export const insertarOrdenTrabajo = async (ordenTrabajo) => {\r\n//     console.log(\"me fui afuera del try u.u\")\r\n//     try {\r\n//         console.log(\"entre al try!! :$\")\r\n//         const response = await apiClient.post('/orden_trabajo', ordenTrabajo);\r\n//         return response.data; // Devuelve los datos recibidos del servidor\r\n//     } catch (error) {\r\n//         console.error('Error al insertar la orden de trabajo:', error.message);\r\n//         throw error; // Lanza el error para que el componente que llama pueda manejarlo\r\n//     }\r\n// };\r\n\r\nexport const insertarOrdenTrabajo = async (formData) => {\r\n    try {\r\n        const response = await apiClient.post('/orden_trabajo', formData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al crear un OT:', error.message);\r\n        return { error: error.response.data }; // Devuelve el error de la respuesta\r\n    }\r\n};\r\n\r\nexport const obtenerClientes = async () => {\r\n    try {\r\n        const response = await apiClient.get('/clientes');\r\n        return response.data; // Devuelve los datos recibidos del servidor\r\n    } catch (error) {\r\n        console.error('Error al obtener los clientes:', error.message);\r\n        return []; // Retorna un array vacío en caso de error\r\n    }\r\n};\r\n\r\nexport const obtenerEmpleados = async () => {\r\n    try {\r\n        const response = await apiClient.get('/empleados');\r\n        return response.data; // Devuelve los datos recibidos del servidor\r\n    } catch (error) {\r\n        console.error('Error al obtener los clientes:', error.message);\r\n        return []; // Retorna un array vacío en caso de error\r\n    }\r\n};\r\n// Subir imagen\r\n// export const subirImagen = async (file, folder = 'img1') => {\r\n//     const formData = new FormData();\r\n//     formData.append('file', file);\r\n\r\n//     try {\r\n//         const response = await apiClient.post(`/subirImagen/${folder}`, formData, {\r\n//             headers: {\r\n//                 'Content-Type': 'multipart/form-data'\r\n//             }\r\n//         });\r\n\r\n//         return response.data; // Devuelve los datos recibidos del servidor\r\n//     } catch (error) {\r\n//         console.error('Error al subir la imagen:', error.message);\r\n//         throw error; // Lanza el error para que el componente que llama pueda manejarlo\r\n//     }\r\n// };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC3BC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,QAAQ,IAAK;EACpD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMN,SAAS,CAACO,IAAI,CAAC,gBAAgB,EAAEF,QAAQ,CAAC;IACjE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACrD,OAAO;MAAEF,KAAK,EAAEA,KAAK,CAACH,QAAQ,CAACE;IAAK,CAAC,CAAC,CAAC;EAC3C;AACJ,CAAC;AAED,OAAO,MAAMI,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMN,SAAS,CAACa,GAAG,CAAC,WAAW,CAAC;IACjD,OAAOP,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC9D,OAAO,EAAE,CAAC,CAAC;EACf;AACJ,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMN,SAAS,CAACa,GAAG,CAAC,YAAY,CAAC;IAClD,OAAOP,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC9D,OAAO,EAAE,CAAC,CAAC;EACf;AACJ,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}