{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api/visitastecnicas',\n  // Base URL del backend\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Obtener todas las visitas técnicas\nexport const getVisitasTecnicas = async () => {\n  try {\n    const response = await api.get('/');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener las visitas técnicas:', error.message);\n    return [];\n  }\n};\n\n// Obtener una visita técnica por ID\nexport const getVisitaTecnicaById = async id => {\n  try {\n    const response = await api.get(`/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener la visita técnica por ID:', error.message);\n    return null;\n  }\n};\n\n// Crear una nueva visita técnica\nexport const createVisitaTecnica = async visitaTecnicaData => {\n  try {\n    const response = await api.post('/', visitaTecnicaData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear la visita técnica:', error.message);\n    return null;\n  }\n};\n\n// Actualizar una visita técnica por ID\nexport const updateVisitaTecnica = async (id, visitaTecnicaData) => {\n  try {\n    const response = await api.put(`/${id}`, visitaTecnicaData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar la visita técnica:', error.message);\n    return null;\n  }\n};\n\n// Eliminar una visita técnica por ID\nexport const deleteVisitaTecnica = async id => {\n  try {\n    const response = await api.delete(`/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar la visita técnica:', error.message);\n    return null;\n  }\n};\nexport const uploadPdf = async (req, res) => {\n  if (!req.file) {\n    return res.status(400).json({\n      error: 'No se ha proporcionado ningún archivo PDF'\n    });\n  }\n  const file = req.file;\n  const fileName = `pdf_visita_tecnica_${Date.now()}`;\n  const newPdfUrl = `https://niqxbeaxtqofvrboxnzb.supabase.co/storage/v1/object/public/presupuesto_vt/${fileName}`;\n  try {\n    // Subir el nuevo archivo PDF a Supabase Storage\n    const {\n      data: uploadData,\n      error: uploadError\n    } = await supabase.storage.from('presupuesto_vt').upload(fileName, file.buffer, {\n      contentType: 'application/pdf'\n    });\n    if (uploadError) {\n      console.error('Error al subir el archivo PDF a Supabase', uploadError);\n      throw new Error('Error al subir el archivo PDF a Supabase');\n    }\n    return res.json({\n      message: 'Archivo PDF subido y URL actualizada correctamente',\n      newPdfUrl\n    });\n  } catch (error) {\n    console.error('Error en el proceso de subida de archivo PDF', error);\n    return res.status(500).json({\n      error: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","getVisitasTecnicas","response","get","data","error","console","message","getVisitaTecnicaById","id","createVisitaTecnica","visitaTecnicaData","post","updateVisitaTecnica","put","deleteVisitaTecnica","delete","uploadPdf","req","res","file","status","json","fileName","Date","now","newPdfUrl","uploadData","uploadError","supabase","storage","from","upload","buffer","contentType","Error"],"sources":["C:/Users/esteb/OneDrive/Escritorio/pt/ARSHEEP/src/services/visitaTecnicaService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3001/api/visitastecnicas', // Base URL del backend\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Obtener todas las visitas técnicas\r\nexport const getVisitasTecnicas = async () => {\r\n    try {\r\n        const response = await api.get('/');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al obtener las visitas técnicas:', error.message);\r\n        return [];\r\n    }\r\n};\r\n\r\n// Obtener una visita técnica por ID\r\nexport const getVisitaTecnicaById = async (id) => {\r\n    try {\r\n        const response = await api.get(`/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al obtener la visita técnica por ID:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Crear una nueva visita técnica\r\nexport const createVisitaTecnica = async (visitaTecnicaData) => {\r\n    try {\r\n        const response = await api.post('/', visitaTecnicaData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al crear la visita técnica:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Actualizar una visita técnica por ID\r\nexport const updateVisitaTecnica = async (id, visitaTecnicaData) => {\r\n    try {\r\n        const response = await api.put(`/${id}`, visitaTecnicaData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al actualizar la visita técnica:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Eliminar una visita técnica por ID\r\nexport const deleteVisitaTecnica = async (id) => {\r\n    try {\r\n        const response = await api.delete(`/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al eliminar la visita técnica:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const uploadPdf = async (req, res) => {\r\n    if (!req.file) {\r\n        return res.status(400).json({ error: 'No se ha proporcionado ningún archivo PDF' });\r\n    }\r\n    const file = req.file;\r\n\r\n    const fileName = `pdf_visita_tecnica_${Date.now()}`;\r\n    const newPdfUrl = `https://niqxbeaxtqofvrboxnzb.supabase.co/storage/v1/object/public/presupuesto_vt/${fileName}`;\r\n\r\n    try {\r\n        // Subir el nuevo archivo PDF a Supabase Storage\r\n        const { data: uploadData, error: uploadError } = await supabase.storage\r\n            .from('presupuesto_vt')\r\n            .upload(fileName, file.buffer, {\r\n                contentType: 'application/pdf'\r\n            });\r\n\r\n        if (uploadError) {\r\n            console.error('Error al subir el archivo PDF a Supabase', uploadError);\r\n            throw new Error('Error al subir el archivo PDF a Supabase');\r\n        }\r\n\r\n        return res.json({ message: 'Archivo PDF subido y URL actualizada correctamente', newPdfUrl });\r\n    } catch (error) {\r\n        console.error('Error en el proceso de subida de archivo PDF', error);\r\n        return res.status(500).json({ error: error.message });\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}