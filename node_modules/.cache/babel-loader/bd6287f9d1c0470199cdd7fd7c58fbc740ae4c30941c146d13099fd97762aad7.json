{"ast":null,"code":"// tipoMantenimientoService.js\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api/tipomantenimientos',\n  // Base URL del backend\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Obtener todos los tipos de mantenimiento\nexport const getTiposMantenimiento = async () => {\n  try {\n    const response = await api.get('/');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener los tipos de mantenimiento:', error.message);\n    return [];\n  }\n};\n\n// Obtener un tipo de mantenimiento por ID\nexport const getTipoMantenimientoById = async id => {\n  try {\n    const response = await api.get(`/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener el tipo de mantenimiento por ID:', error.message);\n    return null;\n  }\n};\n\n// Crear un nuevo tipo de mantenimiento\nexport const createTipoMantenimiento = async tipoMantenimientoData => {\n  try {\n    const response = await api.post('/', tipoMantenimientoData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear el tipo de mantenimiento:', error.message);\n    return null;\n  }\n};\n\n// Actualizar un tipo de mantenimiento por ID\nexport const updateTipoMantenimiento = async (id, tipoMantenimientoData) => {\n  try {\n    const response = await api.put(`/${id}`, tipoMantenimientoData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar el tipo de mantenimiento:', error.message);\n    return null;\n  }\n};\n\n// Eliminar un tipo de mantenimiento por ID\nexport const deleteTipoMantenimiento = async id => {\n  try {\n    const response = await api.delete(`/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar el tipo de mantenimiento:', error.message);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","getTiposMantenimiento","response","get","data","error","console","message","getTipoMantenimientoById","id","createTipoMantenimiento","tipoMantenimientoData","post","updateTipoMantenimiento","put","deleteTipoMantenimiento","delete"],"sources":["C:/Users/pfeve/OneDrive/Escritorio/Arsheep/ARSHEEP/src/services/tipoMantenimientoService.js"],"sourcesContent":["// tipoMantenimientoService.js\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3001/api/tipomantenimientos', // Base URL del backend\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Obtener todos los tipos de mantenimiento\r\nexport const getTiposMantenimiento = async () => {\r\n    try {\r\n        const response = await api.get('/');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al obtener los tipos de mantenimiento:', error.message);\r\n        return [];\r\n    }\r\n};\r\n\r\n// Obtener un tipo de mantenimiento por ID\r\nexport const getTipoMantenimientoById = async (id) => {\r\n    try {\r\n        const response = await api.get(`/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al obtener el tipo de mantenimiento por ID:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Crear un nuevo tipo de mantenimiento\r\nexport const createTipoMantenimiento = async (tipoMantenimientoData) => {\r\n    try {\r\n        const response = await api.post('/', tipoMantenimientoData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al crear el tipo de mantenimiento:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Actualizar un tipo de mantenimiento por ID\r\nexport const updateTipoMantenimiento = async (id, tipoMantenimientoData) => {\r\n    try {\r\n        const response = await api.put(`/${id}`, tipoMantenimientoData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al actualizar el tipo de mantenimiento:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Eliminar un tipo de mantenimiento por ID\r\nexport const deleteTipoMantenimiento = async (id) => {\r\n    try {\r\n        const response = await api.delete(`/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al eliminar el tipo de mantenimiento:', error.message);\r\n        return null;\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,8CAA8C;EAAE;EACzDC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EAC7C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,GAAG,CAAC;IACnC,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC5E,OAAO,EAAE;EACb;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,wBAAwB,GAAG,MAAOC,EAAE,IAAK;EAClD,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,IAAIM,EAAE,EAAE,CAAC;IACxC,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAACE,OAAO,CAAC;IACjF,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,uBAAuB,GAAG,MAAOC,qBAAqB,IAAK;EACpE,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACe,IAAI,CAAC,GAAG,EAAED,qBAAqB,CAAC;IAC3D,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAACE,OAAO,CAAC;IACxE,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMM,uBAAuB,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,qBAAqB,KAAK;EACxE,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACiB,GAAG,CAAC,IAAIL,EAAE,EAAE,EAAEE,qBAAqB,CAAC;IAC/D,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC7E,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMQ,uBAAuB,GAAG,MAAON,EAAE,IAAK;EACjD,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACmB,MAAM,CAAC,IAAIP,EAAE,EAAE,CAAC;IAC3C,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC3E,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}