{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\esteb\\\\OneDrive\\\\Escritorio\\\\pt\\\\ARSHEEP\\\\src\\\\components\\\\pages\\\\Cliente\\\\PageCliente.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./PageCliente.css\";\nimport { obtenerClientes, eliminarCliente } from \"../../../services/ClienteService\";\nimport { obtenerTipoClientePorId } from \"../../../services/TipoClienteService\";\nimport { FormAgregarCliente } from \"./FormAgregarCliente\";\nimport { DashboardDetailsCliente } from \"./DashboardDetailsCliente\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageCliente = () => {\n  _s();\n  // useState para almacenar la lista de clientes\n  const [data, setData] = useState([]);\n\n  // useState para almacenar la lista de clientes filtrados\n  const [filteredData, setFilteredData] = useState([]);\n\n  // useState para almacenar el cliente seleccionado\n  const [clienteSeleccionado, setClienteSeleccionado] = useState(null);\n\n  // useState para almacenar el valor del filtro de búsqueda\n  const [filtro, setFiltro] = useState(\"\");\n\n  // useState para almacenar el criterio de búsqueda\n  const [criterio, setCriterio] = useState(\"pnombre_cliente\");\n\n  // useState para controlar la visibilidad del modal\n  const [showModal, setShowModal] = useState(false);\n\n  // useState para almacenar los tipos de clientes\n  const [tipoClientes, setTipoClientes] = useState({});\n\n  // Función para obtener los datos de los clientes\n  const fetchData = async () => {\n    try {\n      const clientes = await obtenerClientes();\n      console.log(\"Clientes obtenidos:\", clientes);\n      setData(clientes || []);\n      setFilteredData(clientes || []);\n      await fetchTipoClientes(clientes || []);\n    } catch (error) {\n      console.error(\"Error al obtener clientes:\", error);\n    }\n  };\n\n  // Función para obtener los tipos de clientes\n  const fetchTipoClientes = async clientes => {\n    const tipos = {};\n    for (const cliente of clientes) {\n      tipos[cliente.id_tipo_cliente] = await obtenerTipoClientePorId(cliente.id_tipo_cliente);\n    }\n    setTipoClientes(tipos);\n  };\n\n  // useEffect para obtener los datos cuando el componente se monta\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // useEffect para actualizar los datos filtrados cuando cambia 'data'\n  useEffect(() => {\n    console.log(\"Data ha cambiado, actualizando filteredData:\", data);\n    setFilteredData(data);\n  }, [data]);\n\n  // Función para formatear el RUT\n  const formatearRUT = (run, dv) => {\n    const runStr = run.toString();\n    const runFormateado = runStr.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    return `${runFormateado}-${dv}`;\n  };\n\n  // Función para seleccionar un cliente\n  const seleccionarCliente = cliente => {\n    setClienteSeleccionado(cliente);\n  };\n\n  // Función para manejar el cambio del filtro\n  const handleFilterChange = e => {\n    setFiltro(e.target.value);\n  };\n\n  // Función para manejar el cambio del criterio de búsqueda\n  const handleCriterioChange = e => {\n    setCriterio(e.target.value);\n  };\n\n  // Función para aplicar el filtro\n  const aplicarFiltro = () => {\n    const filtered = data.filter(cliente => {\n      var _cliente$criterio;\n      return (_cliente$criterio = cliente[criterio]) === null || _cliente$criterio === void 0 ? void 0 : _cliente$criterio.toString().toLowerCase().includes(filtro.toLowerCase());\n    });\n    setFilteredData(filtered);\n  };\n\n  // Función para deshacer el filtro\n  const deshacerFiltro = () => {\n    setFilteredData(data);\n    setFiltro(\"\");\n  };\n\n  // Función para mostrar el modal\n  const handleShowModal = () => {\n    setShowModal(true);\n    setClienteSeleccionado(null);\n  };\n\n  // Función para cerrar el modal\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  // Función para cerrar el dashboard del cliente seleccionado\n  const handleCloseDashboard = () => {\n    setClienteSeleccionado(null);\n  };\n\n  // Función para eliminar un cliente\n  const handleEliminarCliente = async id => {\n    const confirmacion = window.confirm(\"¿Estás seguro de que deseas eliminar este cliente?\");\n    if (confirmacion) {\n      try {\n        const respuesta = await eliminarCliente(id);\n        if (respuesta) {\n          console.log(\"Cliente eliminado, actualizando lista\");\n          await fetchData();\n          deshacerFiltro();\n          setClienteSeleccionado(null);\n        } else {\n          console.error(\"Error al eliminar el cliente\");\n        }\n      } catch (error) {\n        console.error(\"Error en la solicitud de eliminación:\", error);\n        console.log(id);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"principal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"secondary-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-container-header\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Filtrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-container-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: criterio,\n            onChange: handleCriterioChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"numrun_cliente\",\n              children: \"RUT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dvrun_cliente\",\n              children: \"DV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pnombre_cliente\",\n              children: \"Primer Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"snombre_cliente\",\n              children: \"Segundo Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"appaterno_cliente\",\n              children: \"Apellido Paterno\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"apmaterno_cliente\",\n              children: \"Apellido Materno\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"razon_social_cliente\",\n              children: \"Raz\\xF3n Social\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"fec_inicio_contrato_cliente\",\n              children: \"Inicio Contrato\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"fec_termino_contrato_cliente\",\n              children: \"T\\xE9rmino Contrato\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"fec_creacion_cliente\",\n              children: \"Fecha Creaci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: filtro,\n            onChange: handleFilterChange,\n            placeholder: \"Ingrese filtro...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-container-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: aplicarFiltro,\n            children: \"Filtrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deshacerFiltro,\n            children: \"Deshacer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-buttons-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-buttons-container-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleShowModal,\n            children: \"Agregar Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Excel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"RUT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nombre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Tipo de Cliente\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredData.map(cliente => {\n              var _tipoClientes$cliente;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                onClick: () => seleccionarCliente(cliente),\n                className: \"table-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatearRUT(cliente.numrun_cliente, cliente.dvrun_cliente)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: cliente.pnombre_cliente + \" \" + cliente.snombre_cliente + \" \" + cliente.appaterno_cliente + \" \" + cliente.apmaterno_cliente\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_tipoClientes$cliente = tipoClientes[cliente.id_tipo_cliente]) === null || _tipoClientes$cliente === void 0 ? void 0 : _tipoClientes$cliente.desc_tipo_cliente) || 'Cargando...'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this)]\n              }, cliente.numrun_cliente, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(FormAgregarCliente, {\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }, this), clienteSeleccionado && /*#__PURE__*/_jsxDEV(DashboardDetailsCliente, {\n      clienteSeleccionado: clienteSeleccionado,\n      onClose: handleCloseDashboard,\n      onEliminar: handleEliminarCliente,\n      onUpdateCliente: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(PageCliente, \"fM7WsCc40sLe1tVyY5xC9GicV+I=\");\n_c = PageCliente;\nexport default PageCliente;\nvar _c;\n$RefreshReg$(_c, \"PageCliente\");","map":{"version":3,"names":["React","useEffect","useState","obtenerClientes","eliminarCliente","obtenerTipoClientePorId","FormAgregarCliente","DashboardDetailsCliente","jsxDEV","_jsxDEV","PageCliente","_s","data","setData","filteredData","setFilteredData","clienteSeleccionado","setClienteSeleccionado","filtro","setFiltro","criterio","setCriterio","showModal","setShowModal","tipoClientes","setTipoClientes","fetchData","clientes","console","log","fetchTipoClientes","error","tipos","cliente","id_tipo_cliente","formatearRUT","run","dv","runStr","toString","runFormateado","replace","seleccionarCliente","handleFilterChange","e","target","value","handleCriterioChange","aplicarFiltro","filtered","filter","_cliente$criterio","toLowerCase","includes","deshacerFiltro","handleShowModal","handleCloseModal","handleCloseDashboard","handleEliminarCliente","id","confirmacion","window","confirm","respuesta","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","onClick","map","_tipoClientes$cliente","numrun_cliente","dvrun_cliente","pnombre_cliente","snombre_cliente","appaterno_cliente","apmaterno_cliente","desc_tipo_cliente","onClose","onEliminar","onUpdateCliente","_c","$RefreshReg$"],"sources":["C:/Users/esteb/OneDrive/Escritorio/pt/ARSHEEP/src/components/pages/Cliente/PageCliente.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./PageCliente.css\";\nimport { obtenerClientes, eliminarCliente } from \"../../../services/ClienteService\";\nimport { obtenerTipoClientePorId } from \"../../../services/TipoClienteService\";\nimport { FormAgregarCliente } from \"./FormAgregarCliente\";\nimport { DashboardDetailsCliente } from \"./DashboardDetailsCliente\";\n\nexport const PageCliente = () => {\n  // useState para almacenar la lista de clientes\n  const [data, setData] = useState([]);\n\n  // useState para almacenar la lista de clientes filtrados\n  const [filteredData, setFilteredData] = useState([]);\n\n  // useState para almacenar el cliente seleccionado\n  const [clienteSeleccionado, setClienteSeleccionado] = useState(null);\n\n  // useState para almacenar el valor del filtro de búsqueda\n  const [filtro, setFiltro] = useState(\"\");\n\n  // useState para almacenar el criterio de búsqueda\n  const [criterio, setCriterio] = useState(\"pnombre_cliente\");\n\n  // useState para controlar la visibilidad del modal\n  const [showModal, setShowModal] = useState(false);\n\n  // useState para almacenar los tipos de clientes\n  const [tipoClientes, setTipoClientes] = useState({});\n\n\n    // Función para obtener los datos de los clientes\n    const fetchData = async () => {\n      try {\n        const clientes = await obtenerClientes();\n        console.log(\"Clientes obtenidos:\", clientes);\n        setData(clientes || []);\n        setFilteredData(clientes || []);\n        await fetchTipoClientes(clientes || []);\n      } catch (error) {\n        console.error(\"Error al obtener clientes:\", error);\n      }\n    };\n\n  // Función para obtener los tipos de clientes\n  const fetchTipoClientes = async (clientes) => {\n    const tipos = {};\n    for (const cliente of clientes) {\n      tipos[cliente.id_tipo_cliente] = await obtenerTipoClientePorId(cliente.id_tipo_cliente);\n    }\n    setTipoClientes(tipos);\n  };\n\n\n\n  // useEffect para obtener los datos cuando el componente se monta\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // useEffect para actualizar los datos filtrados cuando cambia 'data'\n  useEffect(() => {\n    console.log(\"Data ha cambiado, actualizando filteredData:\", data);\n    setFilteredData(data);\n  }, [data]);\n\n  // Función para formatear el RUT\n  const formatearRUT = (run, dv) => {\n    const runStr = run.toString();\n    const runFormateado = runStr.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    return `${runFormateado}-${dv}`;\n  };\n\n  // Función para seleccionar un cliente\n  const seleccionarCliente = (cliente) => {\n    setClienteSeleccionado(cliente);\n  };\n\n  // Función para manejar el cambio del filtro\n  const handleFilterChange = (e) => {\n    setFiltro(e.target.value);\n  };\n\n  // Función para manejar el cambio del criterio de búsqueda\n  const handleCriterioChange = (e) => {\n    setCriterio(e.target.value);\n  };\n\n  // Función para aplicar el filtro\n  const aplicarFiltro = () => {\n    const filtered = data.filter((cliente) =>\n      cliente[criterio]?.toString().toLowerCase().includes(filtro.toLowerCase())\n    );\n    setFilteredData(filtered);\n  };\n\n  // Función para deshacer el filtro\n  const deshacerFiltro = () => {\n    setFilteredData(data);\n    setFiltro(\"\");\n  };\n\n  // Función para mostrar el modal\n  const handleShowModal = () => {\n    setShowModal(true);\n    setClienteSeleccionado(null);\n  };\n\n  // Función para cerrar el modal\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  // Función para cerrar el dashboard del cliente seleccionado\n  const handleCloseDashboard = () => {\n    setClienteSeleccionado(null);\n  };\n\n  // Función para eliminar un cliente\n  const handleEliminarCliente = async (id) => {\n    const confirmacion = window.confirm(\n      \"¿Estás seguro de que deseas eliminar este cliente?\"\n    );\n    if (confirmacion) {\n      try {\n        const respuesta = await eliminarCliente(id);\n        if (respuesta) {\n          console.log(\"Cliente eliminado, actualizando lista\");\n          await fetchData();\n          deshacerFiltro();\n          setClienteSeleccionado(null);\n        } else {\n          console.error(\"Error al eliminar el cliente\");\n        }\n      } catch (error) {\n        console.error(\"Error en la solicitud de eliminación:\", error);\n        console.log(id);\n      }\n    }\n  };\n\n  return (\n    <div className=\"principal-container\">\n      <div className=\"secondary-container\">\n        <div className=\"filter-container\">\n          <div className=\"filter-container-header\">\n            <p>Filtrar</p>\n          </div>\n          <div className=\"filter-container-group\">\n            <select value={criterio} onChange={handleCriterioChange}>\n              <option value=\"numrun_cliente\">RUT</option>\n              <option value=\"dvrun_cliente\">DV</option>\n              <option value=\"pnombre_cliente\">Primer Nombre</option>\n              <option value=\"snombre_cliente\">Segundo Nombre</option>\n              <option value=\"appaterno_cliente\">Apellido Paterno</option>\n              <option value=\"apmaterno_cliente\">Apellido Materno</option>\n              <option value=\"razon_social_cliente\">Razón Social</option>\n              <option value=\"fec_inicio_contrato_cliente\">Inicio Contrato</option>\n              <option value=\"fec_termino_contrato_cliente\">Término Contrato</option>\n              <option value=\"fec_creacion_cliente\">Fecha Creación</option>\n            </select>\n            <input\n              type=\"text\"\n              value={filtro}\n              onChange={handleFilterChange}\n              placeholder=\"Ingrese filtro...\"\n            />\n          </div>\n          <div className=\"filter-container-button\">\n            <button onClick={aplicarFiltro}>Filtrar</button>\n            <button onClick={deshacerFiltro}>Deshacer</button>\n          </div>\n        </div>\n        <div className=\"control-buttons-container\">\n          <div className=\"control-buttons-container-group\">\n            <button onClick={handleShowModal}>Agregar Cliente</button>\n            <button>PDF</button>\n            <button>Excel</button>\n          </div>\n        </div>\n        <div className=\"table-container\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>RUT</th>\n                <th>Nombre</th>\n                <th>Tipo de Cliente</th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredData.map((cliente) => (\n                <tr\n                  key={cliente.numrun_cliente}\n                  onClick={() => seleccionarCliente(cliente)}\n                  className=\"table-row\"\n                >\n                  <td>\n                    {formatearRUT(\n                      cliente.numrun_cliente,\n                      cliente.dvrun_cliente\n                    )}\n                  </td>\n                  <td>{cliente.pnombre_cliente + \" \" + cliente.snombre_cliente + \" \" + cliente.appaterno_cliente + \" \" + cliente.apmaterno_cliente}</td>\n                  <td>{tipoClientes[cliente.id_tipo_cliente]?.desc_tipo_cliente || 'Cargando...'}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      {showModal && <FormAgregarCliente onClose={handleCloseModal} />}\n      {clienteSeleccionado && (\n        <DashboardDetailsCliente\n          clienteSeleccionado={clienteSeleccionado}\n          onClose={handleCloseDashboard}\n          onEliminar={handleEliminarCliente}\n          onUpdateCliente={fetchData}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PageCliente;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}