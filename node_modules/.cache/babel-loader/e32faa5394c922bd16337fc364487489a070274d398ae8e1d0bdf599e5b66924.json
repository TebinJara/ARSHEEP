{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  // Asegúrate de que esta sea la URL correcta\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const obtenerUsuariosEmpleados = async () => {\n  try {\n    const response = await apiClient.get('/usersEmployees');\n    return response.data; // Devuelve los datos recibidos del servidor\n  } catch (error) {\n    console.error('Error al obtener los usuarios del tipo empelado:', error.message);\n    return []; // Retorna un array vacío en caso de error\n  }\n};\nexport const obtenerUsuarioEmpleadoPorID = async id_usuario => {\n  try {\n    const response = await apiClient.get(`/usersEmployees/getUsuarioEmpleadoPorId/${id_usuario}`);\n    return response.data; // Devuelve los datos recibidos del servidor\n  } catch (error) {\n    console.error('Error al obtener el usuario por ID:', error.message);\n    return null; // Retorna null en caso de error\n  }\n};\nexport const cambiarEstadoUsuario = async (id_usuario, nuevo_estado) => {\n  try {\n    const response = await apiClient.put('usersEmployees/cambiarEstadoUsuario', {\n      id_usuario,\n      nuevo_estado\n    });\n    return response.data; // Devuelve los datos recibidos del servidor\n  } catch (error) {\n    console.error('Error al cambiar el estado del usuario:', error.message);\n    return null; // Retorna null en caso de error\n  }\n};\nexport const subirImagen = async (file, user, setProfileImage, actualizarUsuarios) => {\n  if (!file) return;\n  const formData = new FormData();\n  formData.append('image', file);\n  formData.append('id_usuario', user.id_usuario);\n  formData.append('imagen_antigua', user.profile_image);\n  try {\n    const response = await apiClient.post('/usersEmployees/uploadImage', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    const newImageUrl = response.data.url;\n    setProfileImage(newImageUrl);\n    actualizarUsuarios();\n  } catch (error) {\n    console.error('Error al subir la imagen:', error);\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","obtenerUsuariosEmpleados","response","get","data","error","console","message","obtenerUsuarioEmpleadoPorID","id_usuario","cambiarEstadoUsuario","nuevo_estado","put","subirImagen","file","user","setProfileImage","actualizarUsuarios","formData","FormData","append","profile_image","post","newImageUrl","url"],"sources":["C:/Users/esteb/OneDrive/Escritorio/pt/ARSHEEP/src/services/GestionUsuariosService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: 'http://localhost:3001/api', // Asegúrate de que esta sea la URL correcta\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport const obtenerUsuariosEmpleados = async () => {\r\n    try {\r\n        const response = await apiClient.get('/usersEmployees');\r\n        return response.data; // Devuelve los datos recibidos del servidor\r\n    } catch (error) {\r\n        console.error('Error al obtener los usuarios del tipo empelado:', error.message);\r\n        return []; // Retorna un array vacío en caso de error\r\n    }\r\n};\r\n\r\nexport const obtenerUsuarioEmpleadoPorID = async (id_usuario) => {\r\n    try {\r\n        const response = await apiClient.get(`/usersEmployees/getUsuarioEmpleadoPorId/${id_usuario}`);\r\n        return response.data; // Devuelve los datos recibidos del servidor\r\n    } catch (error) {\r\n        console.error('Error al obtener el usuario por ID:', error.message);\r\n        return null; // Retorna null en caso de error\r\n    }\r\n};\r\n\r\nexport const cambiarEstadoUsuario = async (id_usuario, nuevo_estado) => {\r\n    try {\r\n        const response = await apiClient.put('usersEmployees/cambiarEstadoUsuario', {\r\n            id_usuario,\r\n            nuevo_estado\r\n        });\r\n        return response.data; // Devuelve los datos recibidos del servidor\r\n    } catch (error) {\r\n        console.error('Error al cambiar el estado del usuario:', error.message);\r\n        return null; // Retorna null en caso de error\r\n    }\r\n};\r\n\r\nexport const subirImagen = async (file, user, setProfileImage, actualizarUsuarios) => {\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    formData.append('id_usuario', user.id_usuario);\r\n    formData.append('imagen_antigua', user.profile_image);\r\n\r\n    try {\r\n        const response = await apiClient.post('/usersEmployees/uploadImage', formData, {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        });\r\n\r\n        const newImageUrl = response.data.url;\r\n        setProfileImage(newImageUrl);\r\n        actualizarUsuarios();\r\n\r\n    } catch (error) {\r\n        console.error('Error al subir la imagen:', error);\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC3BC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,wBAAwB,GAAG,MAAAA,CAAA,KAAY;EAChD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,SAAS,CAACM,GAAG,CAAC,iBAAiB,CAAC;IACvD,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAACE,OAAO,CAAC;IAChF,OAAO,EAAE,CAAC,CAAC;EACf;AACJ,CAAC;AAED,OAAO,MAAMC,2BAA2B,GAAG,MAAOC,UAAU,IAAK;EAC7D,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAML,SAAS,CAACM,GAAG,CAAC,2CAA2CM,UAAU,EAAE,CAAC;IAC7F,OAAOP,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACnE,OAAO,IAAI,CAAC,CAAC;EACjB;AACJ,CAAC;AAED,OAAO,MAAMG,oBAAoB,GAAG,MAAAA,CAAOD,UAAU,EAAEE,YAAY,KAAK;EACpE,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAML,SAAS,CAACe,GAAG,CAAC,qCAAqC,EAAE;MACxEH,UAAU;MACVE;IACJ,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACvE,OAAO,IAAI,CAAC,CAAC;EACjB;AACJ,CAAC;AAED,OAAO,MAAMM,WAAW,GAAG,MAAAA,CAAOC,IAAI,EAAEC,IAAI,EAAEC,eAAe,EAAEC,kBAAkB,KAAK;EAClF,IAAI,CAACH,IAAI,EAAE;EAEX,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,IAAI,CAAC;EAC9BI,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEL,IAAI,CAACN,UAAU,CAAC;EAC9CS,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEL,IAAI,CAACM,aAAa,CAAC;EAErD,IAAI;IACA,MAAMnB,QAAQ,GAAG,MAAML,SAAS,CAACyB,IAAI,CAAC,6BAA6B,EAAEJ,QAAQ,EAAE;MAC3ElB,OAAO,EAAE;QAAE,cAAc,EAAE;MAAsB;IACrD,CAAC,CAAC;IAEF,MAAMuB,WAAW,GAAGrB,QAAQ,CAACE,IAAI,CAACoB,GAAG;IACrCR,eAAe,CAACO,WAAW,CAAC;IAC5BN,kBAAkB,CAAC,CAAC;EAExB,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACrD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}