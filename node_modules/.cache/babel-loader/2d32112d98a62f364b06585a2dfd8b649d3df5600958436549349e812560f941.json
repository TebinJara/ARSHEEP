{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  // Base URL del backend\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Obtener todos los clientes con relaciones\nexport const getClientes = async () => {\n  try {\n    const response = await api.get('/clientes');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener los clientes:', error.message);\n    return [];\n  }\n};\n\n// Obtener un cliente por ID con relaciones\nexport const getClienteById = async id => {\n  try {\n    const response = await api.get(`/clientes/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener el cliente por ID:', error.message);\n    return null;\n  }\n};\n\n// Crear un nuevo cliente\nexport const createCliente = async clienteData => {\n  try {\n    const response = await api.post('/clientes', clienteData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear el cliente:', error.message);\n    return null;\n  }\n};\n\n// Actualizar un cliente por ID\nexport const updateCliente = async (id, clienteData) => {\n  try {\n    const response = await api.put(`/clientes/${id}`, clienteData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar el cliente:', error.message);\n    return null;\n  }\n};\n\n// Eliminar un cliente por ID\nexport const deleteCliente = async id => {\n  try {\n    const response = await api.delete(`/clientes/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar el cliente:', error.message);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","getClientes","response","get","data","error","console","message","getClienteById","id","createCliente","clienteData","post","updateCliente","put","deleteCliente","delete"],"sources":["C:/Users/esteb/OneDrive/Escritorio/pt/ARSHEEP/src/services/clienteService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3001/api', // Base URL del backend\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Obtener todos los clientes con relaciones\r\nexport const getClientes = async () => {\r\n    try {\r\n        const response = await api.get('/clientes');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al obtener los clientes:', error.message);\r\n        return [];\r\n    }\r\n};\r\n\r\n// Obtener un cliente por ID con relaciones\r\nexport const getClienteById = async (id) => {\r\n    try {\r\n        const response = await api.get(`/clientes/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al obtener el cliente por ID:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Crear un nuevo cliente\r\nexport const createCliente = async (clienteData) => {\r\n    try {\r\n        const response = await api.post('/clientes', clienteData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al crear el cliente:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Actualizar un cliente por ID\r\nexport const updateCliente = async (id, clienteData) => {\r\n    try {\r\n        const response = await api.put(`/clientes/${id}`, clienteData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al actualizar el cliente:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Eliminar un cliente por ID\r\nexport const deleteCliente = async (id) => {\r\n    try {\r\n        const response = await api.delete(`/clientes/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al eliminar el cliente:', error.message);\r\n        return null;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC9D,OAAO,EAAE;EACb;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOC,EAAE,IAAK;EACxC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,aAAaM,EAAE,EAAE,CAAC;IACjD,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACnE,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,aAAa,GAAG,MAAOC,WAAW,IAAK;EAChD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACe,IAAI,CAAC,WAAW,EAAED,WAAW,CAAC;IACzD,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC1D,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,WAAW,KAAK;EACpD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACiB,GAAG,CAAC,aAAaL,EAAE,EAAE,EAAEE,WAAW,CAAC;IAC9D,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC/D,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAON,EAAE,IAAK;EACvC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACmB,MAAM,CAAC,aAAaP,EAAE,EAAE,CAAC;IACpD,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC7D,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}