{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  // Asegúrate de que esta sea la URL correcta\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Obtener todos los clientes\nexport const obtenerClientes = async () => {\n  try {\n    const response = await apiClient.get('/clientes');\n    return response.data; // Devuelve los datos recibidos del servidor\n  } catch (error) {\n    console.error('Error al obtener los clientes:', error.message);\n    return []; // Retorna un array vacío en caso de error\n  }\n};\n\n// Obtener un cliente por ID\nexport const obtenerClientePorId = async id => {\n  try {\n    const response = await apiClient.get(`/clientes/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener el cliente por ID:', error.message);\n    return null;\n  }\n};\nexport const crearCliente = async formData => {\n  try {\n    const response = await apiClient.post('/clientes', formData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear un cliente:', error.message);\n    return {\n      error: error.response.data\n    }; // Devuelve el error de la respuesta\n  }\n};\n\n// Actualizar un cliente\nexport const actualizarCliente = async (id, cliente) => {\n  try {\n    const response = await apiClient.put(`/clientes/${id}`, cliente);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar el cliente:', error.message);\n    return null;\n  }\n};\n\n// Eliminar un cliente\nexport const eliminarCliente = async id => {\n  try {\n    console.log(`Enviando solicitud para eliminar el cliente con ID: ${id}`);\n    const response = await apiClient.delete(`/clientes/${id}`);\n    console.log('Respuesta del servidor:', response.data); // Log para depuración\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar el cliente:', error.message);\n    if (error.response) {\n      console.error('Detalles del error:', error.response.data);\n      return {\n        error: error.response.data\n      };\n    }\n    return null;\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","obtenerClientes","response","get","data","error","console","message","obtenerClientePorId","id","crearCliente","formData","post","actualizarCliente","cliente","put","eliminarCliente","log","delete"],"sources":["C:/Users/felip/OneDrive/Documentos/GitHub/ARSHEEP/src/services/ClienteService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: 'http://localhost:3001/api', // Asegúrate de que esta sea la URL correcta\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Obtener todos los clientes\r\nexport const obtenerClientes = async () => {\r\n    try {\r\n        const response = await apiClient.get('/clientes');\r\n        return response.data; // Devuelve los datos recibidos del servidor\r\n    } catch (error) {\r\n        console.error('Error al obtener los clientes:', error.message);\r\n        return []; // Retorna un array vacío en caso de error\r\n    }\r\n};\r\n\r\n// Obtener un cliente por ID\r\nexport const obtenerClientePorId = async (id) => {\r\n    try {\r\n        const response = await apiClient.get(`/clientes/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al obtener el cliente por ID:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const crearCliente = async (formData) => {\r\n    try {\r\n        const response = await apiClient.post('/clientes', formData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al crear un cliente:', error.message);\r\n        return { error: error.response.data }; // Devuelve el error de la respuesta\r\n    }\r\n};\r\n\r\n\r\n// Actualizar un cliente\r\nexport const actualizarCliente = async (id, cliente) => {\r\n    try {\r\n        const response = await apiClient.put(`/clientes/${id}`, cliente);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al actualizar el cliente:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Eliminar un cliente\r\nexport const eliminarCliente = async (id) => {\r\n    try {\r\n        console.log(`Enviando solicitud para eliminar el cliente con ID: ${id}`);\r\n        const response = await apiClient.delete(`/clientes/${id}`);\r\n        console.log('Respuesta del servidor:', response.data); // Log para depuración\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al eliminar el cliente:', error.message);\r\n        if (error.response) {\r\n            console.error('Detalles del error:', error.response.data);\r\n            return { error: error.response.data };\r\n        }\r\n        return null;\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC3BC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,SAAS,CAACM,GAAG,CAAC,WAAW,CAAC;IACjD,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC9D,OAAO,EAAE,CAAC,CAAC;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAOC,EAAE,IAAK;EAC7C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAML,SAAS,CAACM,GAAG,CAAC,aAAaM,EAAE,EAAE,CAAC;IACvD,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACnE,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAML,SAAS,CAACe,IAAI,CAAC,WAAW,EAAED,QAAQ,CAAC;IAC5D,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC1D,OAAO;MAAEF,KAAK,EAAEA,KAAK,CAACH,QAAQ,CAACE;IAAK,CAAC,CAAC,CAAC;EAC3C;AACJ,CAAC;;AAGD;AACA,OAAO,MAAMS,iBAAiB,GAAG,MAAAA,CAAOJ,EAAE,EAAEK,OAAO,KAAK;EACpD,IAAI;IACA,MAAMZ,QAAQ,GAAG,MAAML,SAAS,CAACkB,GAAG,CAAC,aAAaN,EAAE,EAAE,EAAEK,OAAO,CAAC;IAChE,OAAOZ,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC/D,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMS,eAAe,GAAG,MAAOP,EAAE,IAAK;EACzC,IAAI;IACAH,OAAO,CAACW,GAAG,CAAC,uDAAuDR,EAAE,EAAE,CAAC;IACxE,MAAMP,QAAQ,GAAG,MAAML,SAAS,CAACqB,MAAM,CAAC,aAAaT,EAAE,EAAE,CAAC;IAC1DH,OAAO,CAACW,GAAG,CAAC,yBAAyB,EAAEf,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IACvD,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC7D,IAAIF,KAAK,CAACH,QAAQ,EAAE;MAChBI,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;MACzD,OAAO;QAAEC,KAAK,EAAEA,KAAK,CAACH,QAAQ,CAACE;MAAK,CAAC;IACzC;IACA,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}