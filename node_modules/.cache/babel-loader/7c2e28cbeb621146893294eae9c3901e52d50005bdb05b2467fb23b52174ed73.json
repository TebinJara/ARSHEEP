{"ast":null,"code":"// inputHelpers.js\nconst regexMap = {\n  number: /^[0-9]$/,\n  uppercase: /^[A-Z]$/,\n  string: /^.*$/ // Permitir cualquier carácter\n};\nexport const handleKeyDown = (event, charType) => {\n  const regex = regexMap[charType] || /.*/;\n  const char = event.key;\n  if (!regex.test(char)) {\n    event.preventDefault();\n  }\n};\nexport const handleChange = (event, setValue, charType) => {\n  let value = event.target.value;\n  if (charType === 'uppercase') {\n    value = value.toUpperCase();\n  }\n  setValue(value);\n};","map":{"version":3,"names":["regexMap","number","uppercase","string","handleKeyDown","event","charType","regex","char","key","test","preventDefault","handleChange","setValue","value","target","toUpperCase"],"sources":["C:/Users/esteb/OneDrive/Escritorio/pt/ARSHEEP/src/helpers/inputHelpers.js"],"sourcesContent":["// inputHelpers.js\r\nconst regexMap = {\r\n    number: /^[0-9]$/,\r\n    uppercase: /^[A-Z]$/,\r\n    string: /^.*$/, // Permitir cualquier carácter\r\n  };\r\n  \r\n  export const handleKeyDown = (event, charType) => {\r\n    const regex = regexMap[charType] || /.*/;\r\n    const char = event.key;\r\n    if (!regex.test(char)) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n  \r\n  export const handleChange = (event, setValue, charType) => {\r\n    let value = event.target.value;\r\n    if (charType === 'uppercase') {\r\n      value = value.toUpperCase();\r\n    }\r\n    setValue(value);\r\n  };"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG;EACbC,MAAM,EAAE,SAAS;EACjBC,SAAS,EAAE,SAAS;EACpBC,MAAM,EAAE,MAAM,CAAE;AAClB,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAChD,MAAMC,KAAK,GAAGP,QAAQ,CAACM,QAAQ,CAAC,IAAI,IAAI;EACxC,MAAME,IAAI,GAAGH,KAAK,CAACI,GAAG;EACtB,IAAI,CAACF,KAAK,CAACG,IAAI,CAACF,IAAI,CAAC,EAAE;IACrBH,KAAK,CAACM,cAAc,CAAC,CAAC;EACxB;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAACP,KAAK,EAAEQ,QAAQ,EAAEP,QAAQ,KAAK;EACzD,IAAIQ,KAAK,GAAGT,KAAK,CAACU,MAAM,CAACD,KAAK;EAC9B,IAAIR,QAAQ,KAAK,WAAW,EAAE;IAC5BQ,KAAK,GAAGA,KAAK,CAACE,WAAW,CAAC,CAAC;EAC7B;EACAH,QAAQ,CAACC,KAAK,CAAC;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}