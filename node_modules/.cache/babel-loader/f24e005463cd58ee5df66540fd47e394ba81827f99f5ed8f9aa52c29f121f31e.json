{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api/empleados',\n  // Base URL del backend\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Obtener todos los empleados\nexport const getEmpleados = async () => {\n  try {\n    const response = await api.get('/empleados');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener los empleados:', error.message);\n    return [];\n  }\n};\n\n// Obtener un empleado por ID\nexport const getEmpleadoById = async id => {\n  try {\n    const response = await api.get(`/empleados/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener el empleado por ID:', error.message);\n    return null;\n  }\n};\n\n// Crear un nuevo empleado\nexport const createEmpleado = async empleadoData => {\n  try {\n    const response = await api.post('/empleados', empleadoData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear el empleado:', error.message);\n    return null;\n  }\n};\n\n// Actualizar un empleado por ID\nexport const updateEmpleado = async (id, empleadoData) => {\n  try {\n    const response = await api.put(`/empleados/${id}`, empleadoData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar el empleado:', error.message);\n    return null;\n  }\n};\n\n// Eliminar un empleado por ID\nexport const deleteEmpleado = async id => {\n  try {\n    const response = await api.delete(`/empleados/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar el empleado:', error.message);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","getEmpleados","response","get","data","error","console","message","getEmpleadoById","id","createEmpleado","empleadoData","post","updateEmpleado","put","deleteEmpleado","delete"],"sources":["C:/Users/esteb/OneDrive/Escritorio/pt/ARSHEEP/src/services/empleadoService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3001/api/empleados', // Base URL del backend\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Obtener todos los empleados\r\nexport const getEmpleados = async () => {\r\n    try {\r\n        const response = await api.get('/empleados');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al obtener los empleados:', error.message);\r\n        return [];\r\n    }\r\n};\r\n\r\n// Obtener un empleado por ID\r\nexport const getEmpleadoById = async (id) => {\r\n    try {\r\n        const response = await api.get(`/empleados/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al obtener el empleado por ID:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Crear un nuevo empleado\r\nexport const createEmpleado = async (empleadoData) => {\r\n    try {\r\n        const response = await api.post('/empleados', empleadoData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al crear el empleado:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Actualizar un empleado por ID\r\nexport const updateEmpleado = async (id, empleadoData) => {\r\n    try {\r\n        const response = await api.put(`/empleados/${id}`, empleadoData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al actualizar el empleado:', error.message);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Eliminar un empleado por ID\r\nexport const deleteEmpleado = async (id) => {\r\n    try {\r\n        const response = await api.delete(`/empleados/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al eliminar el empleado:', error.message);\r\n        return null;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,qCAAqC;EAAE;EAChDC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,YAAY,CAAC;IAC5C,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC/D,OAAO,EAAE;EACb;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOC,EAAE,IAAK;EACzC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,cAAcM,EAAE,EAAE,CAAC;IAClD,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACpE,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,cAAc,GAAG,MAAOC,YAAY,IAAK;EAClD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACe,IAAI,CAAC,YAAY,EAAED,YAAY,CAAC;IAC3D,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC3D,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMM,cAAc,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,YAAY,KAAK;EACtD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACiB,GAAG,CAAC,cAAcL,EAAE,EAAE,EAAEE,YAAY,CAAC;IAChE,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAChE,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMQ,cAAc,GAAG,MAAON,EAAE,IAAK;EACxC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACmB,MAAM,CAAC,cAAcP,EAAE,EAAE,CAAC;IACrD,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC9D,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}